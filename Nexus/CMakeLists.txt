cmake_minimum_required(VERSION 3.8)
project(Nexus)
set(DEFAULT_BUILD_TYPE "Release")
if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  set(CMAKE_BUILD_TYPE "${DEFAULT_BUILD_TYPE}" CACHE
    STRING "Choose the type of build." FORCE)
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
    "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
endif()
execute_process(COMMAND "pwd" OUTPUT_VARIABLE PWD)
string(STRIP "${PWD}" PWD)
file(TO_CMAKE_PATH "${PWD}" PWD)
set(D "${PWD}/Dependencies" CACHE PATH "Path to dependencies directory.")
set(DEPENDENCIES_PATH "${D}")
file(TO_CMAKE_PATH "${DEPENDENCIES_PATH}" DEPENDENCIES_PATH)
file(MAKE_DIRECTORY "${DEPENDENCIES_PATH}")
if(WIN32)
  execute_process(COMMAND cmd /c "CALL ${CMAKE_CURRENT_LIST_DIR}/setup.bat"
    WORKING_DIRECTORY "${DEPENDENCIES_PATH}")
elseif(UNIX)
  execute_process(COMMAND "${CMAKE_CURRENT_LIST_DIR}/setup.sh"
    WORKING_DIRECTORY "${DEPENDENCIES_PATH}")
endif()
include(Config/dependencies.cmake)
include_directories(${NEXUS_INCLUDE_PATH})
include_directories(SYSTEM ${BEAM_INCLUDE_PATH})
include_directories(SYSTEM ${BOOST_INCLUDE_PATH})
include_directories(SYSTEM ${CPPUNIT_INCLUDE_PATH})
include_directories(SYSTEM ${CRYPTOPP_INCLUDE_PATH})
include_directories(SYSTEM ${LUA_INCLUDE_PATH})
include_directories(SYSTEM ${MYSQL_INCLUDE_PATH})
include_directories(SYSTEM ${MYSQLPP_INCLUDE_PATH})
include_directories(SYSTEM ${OPEN_SSL_INCLUDE_PATH})
include_directories(SYSTEM ${SQLITE_INCLUDE_PATH})
include_directories(SYSTEM ${TCLAP_INCLUDE_PATH})
include_directories(SYSTEM ${VIPER_INCLUDE_PATH})
include_directories(SYSTEM ${YAML_INCLUDE_PATH})
include_directories(SYSTEM ${ZLIB_INCLUDE_PATH})
link_directories(${BOOST_DEBUG_PATH})
link_directories(${BOOST_OPTIMIZED_PATH})
set(TEST_INSTALL_DIRECTORY "${PWD}/Tests")
set(LIB_INSTALL_DIRECTORY "${PWD}/Libraries")
if(MSVC)
  set(CMAKE_LIBRARY_FLAGS "/LTCG")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /WX /bigobj /std:c++17 /Wv:18")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /GL")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SAFESEH:NO")
  set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /LTCG")
  add_definitions(-DBOOST_CONFIG_SUPPRESS_OUTDATED_MESSAGE)
  add_definitions(-D_CRT_SECURE_NO_DEPRECATE)
  add_definitions(-D_HAS_AUTO_PTR_ETC=1)
  add_definitions(-DMYSQLPP_NO_DLL)
  add_definitions(-DNOMINMAX)
  add_definitions(-D_SCL_SECURE_NO_WARNINGS)
  add_definitions(-D_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS)
  add_definitions(-D_WIN32_WINNT=0x0501)
  add_definitions(-DWIN32_LEAN_AND_MEAN)
  add_definitions(/experimental:external)
  add_definitions(/external:W0)
  add_definitions(/external:anglebrackets)
endif()
if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX OR
    ${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -std=c++17")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_RELEASE} -O2 -DNDEBUG")
endif()
if(CYGWIN)
  add_definitions(-D__USE_W32_SOCKETS)
endif()
if(${CMAKE_SYSTEM_NAME} STREQUAL "SunOS")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_RELEASE} -pthreads")
endif()
add_subdirectory(Config/Nexus)
