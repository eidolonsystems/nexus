{"version":3,"sources":["../../../src/definitions/currency-pair/spec.js"],"names":["describe","beforeAll","usdEntry","cadEntry","currencyDatabase","add","it","currencyPair","parse","expect","toBe","base","toNumber","counter","testSubject","bind","toThrow","Error","pair","invertedPair","invert"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,SAAS,cAAT,EAAyB,YAAW;AAClCC,YAAU,YAAW;AACnB,QAAIC,WAAW,oCAA0B,yBAAe,GAAf,CAA1B,EAA+C,KAA/C,EAAsD,GAAtD,CAAf;AACA,QAAIC,WAAW,oCAA0B,yBAAe,GAAf,CAA1B,EAA+C,KAA/C,EAAsD,GAAtD,CAAf;AACA,SAAKC,gBAAL,GAAwB,gCAAxB;AACA,SAAKA,gBAAL,CAAsBC,GAAtB,CAA0BH,QAA1B;AACA,SAAKE,gBAAL,CAAsBC,GAAtB,CAA0BF,QAA1B;AACD,GAND;;AAQAG,KAAG,4BAAH,EAAiC,YAAW;AAC1C,QAAIC,eAAe,uBAAaC,KAAb,CAAmB,SAAnB,EAA8B,KAAKJ,gBAAnC,CAAnB;AACAK,WAAO,GAAP,EAAYC,IAAZ,CAAiBH,aAAaI,IAAb,CAAkBC,QAAlB,EAAjB;AACAH,WAAO,GAAP,EAAYC,IAAZ,CAAiBH,aAAaM,OAAb,CAAqBD,QAArB,EAAjB;AACD,GAJD;;AAMAN,KAAG,+BAAH,EAAoC,YAAW;AAC7C,QAAIQ,cAAc,YAAU;AAAE,6BAAaN,KAAb,CAAmB,QAAnB,EAA6B,KAAKJ,gBAAlC;AAAsD,KAAlE,CAAmEW,IAAnE,CAAwE,IAAxE,CAAlB;AACAN,WAAOK,WAAP,EAAoBE,OAApB,CAA4B,IAAIC,KAAJ,CAAU,uBAAV,CAA5B;;AAEAH,kBAAc,YAAU;AAAE,6BAAaN,KAAb,CAAmB,SAAnB,EAA8B,KAAKJ,gBAAnC;AAAuD,KAAnE,CAAoEW,IAApE,CAAyE,IAAzE,CAAd;AACAN,WAAOK,WAAP,EAAoBE,OAApB,CAA4B,IAAIC,KAAJ,CAAU,4BAAV,CAA5B;;AAEAH,kBAAc,YAAU;AAAE,6BAAaN,KAAb,CAAmB,SAAnB,EAA8B,KAAKJ,gBAAnC;AAAuD,KAAnE,CAAoEW,IAApE,CAAyE,IAAzE,CAAd;AACAN,WAAOK,WAAP,EAAoBE,OAApB,CAA4B,IAAIC,KAAJ,CAAU,+BAAV,CAA5B;AACD,GATD;;AAWAX,KAAG,uBAAH,EAA4B,YAAW;AACrC,QAAIY,OAAO,uBAAaV,KAAb,CAAmB,SAAnB,EAA8B,KAAKJ,gBAAnC,CAAX;AACA,QAAIe,eAAe,uBAAaC,MAAb,CAAoBF,IAApB,CAAnB;AACAT,WAAO,GAAP,EAAYC,IAAZ,CAAiBS,aAAaR,IAAb,CAAkBC,QAAlB,EAAjB;AACAH,WAAO,GAAP,EAAYC,IAAZ,CAAiBS,aAAaN,OAAb,CAAqBD,QAArB,EAAjB;AACD,GALD;AAMD,CAhCD","file":"spec.js","sourcesContent":["import CurrencyPair from '../../../../dist/definitions/currency-pair';\nimport CurrencyDatabase from '../../../../dist/definitions/currency-database';\nimport CurrencyDatabaseEntry from '../../../../dist/definitions/currency-database-entry';\nimport CurrencyId from '../../../../dist/definitions/currency-id';\n\ndescribe(\"CurrencyPair\", function() {\n  beforeAll(function() {\n    let usdEntry = new CurrencyDatabaseEntry(new CurrencyId(840), 'USD', '$');\n    let cadEntry = new CurrencyDatabaseEntry(new CurrencyId(124), 'CAD', '$');\n    this.currencyDatabase = new CurrencyDatabase();\n    this.currencyDatabase.add(usdEntry);\n    this.currencyDatabase.add(cadEntry);\n  });\n\n  it(\"Parse symbol - valid case.\", function() {\n    let currencyPair = CurrencyPair.parse('USD/CAD', this.currencyDatabase);\n    expect(840).toBe(currencyPair.base.toNumber());\n    expect(124).toBe(currencyPair.counter.toNumber());\n  });\n\n  it(\"Parse symbol - invalid cases.\", function() {\n    let testSubject = function(){ CurrencyPair.parse('USDCAD', this.currencyDatabase); }.bind(this);\n    expect(testSubject).toThrow(new Error('Missing separator \"/\"'));\n\n    testSubject = function(){ CurrencyPair.parse('GBP/CAD', this.currencyDatabase); }.bind(this);\n    expect(testSubject).toThrow(new Error('Invalid base currency code'));\n\n    testSubject = function(){ CurrencyPair.parse('USD/GBP', this.currencyDatabase); }.bind(this);\n    expect(testSubject).toThrow(new Error('Invalid counter currency code'));\n  });\n\n  it(\"Invert currency pair.\", function() {\n    let pair = CurrencyPair.parse('USD/CAD', this.currencyDatabase);\n    let invertedPair = CurrencyPair.invert(pair);\n    expect(124).toBe(invertedPair.base.toNumber());\n    expect(840).toBe(invertedPair.counter.toNumber());\n  });\n});\n"]}